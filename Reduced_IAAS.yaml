-   content: |
        # Local config for Cloud Scheduler

        ## Set this to the name you would like to give your VM
        VMType = "atlas-worker"

        ## Hostname of the central manager.
        # Prefer value contextualized by Cloud Scheduler and then use central_manager
        CONDOR_HOST=condor.heprc.uvic.ca

        SEC_DAEMON_AUTHENTICATION =
        SEC_DAEMON_AUTHENTICATION_METHODS =
        SEC_CLIENT_AUTHENTICATION_METHODS =
        SEC_PASSWORD_FILE =

        ## Execute spool directory. - Verify that these directory's exist - or change to desired location
        # EXECUTE=/var/condor/execute # EXECUTE=$HOME/execute below
        # LOCK=/var/condor/lock # LOCK=$(LOG) in condor_config
        LOG=/var/log/condor
        RUN=/var/run/condor
        SPOOL=/var/lib/condor/spool

        ## Point to the java executable.
        JAVA = /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java


        ###### You should not need to make changes below here ########
        HOSTALLOW_WRITE = $(IP_ADDRESS), $(FULL_HOSTNAME), $(CONDOR_HOST)
        ALLOW_WRITE = $(IP_ADDRESS), $(FULL_HOSTNAME), $(CONDOR_HOST)

        ##  Enable CCB for nodes behind NAT
        CCB_ADDRESS = $(CONDOR_HOST)

        ## By default, user jobs run as nobody.
        TRUST_UID_DOMAIN = False
        ## If you require jobs to run as a user set TRUST_UID_DOMAIN to True and uncomment the following
        #SCHEDD_HOST=$(CONDOR_HOST)
        #UID_DOMAIN=$(CONDOR_HOST)
        #FILESYSTEM_DOMAIN=$(CONDOR_HOST)

        ## START requirement
        START = TRUE

        DAEMON_LIST = MASTER, STARTD

        # Give VMs enough time to retire their jobs and for condor daemons to shutdown
        MaxJobRetirementTime = 3600 * 24 * 2
        SHUTDOWN_GRACEFUL_TIMEOUT = 3600 * 25 * 2

        ### Job environment config
        USER_JOB_WRAPPER = /usr/libexec/condor/jobwrapper.sh
        NUM_SLOTS = 1
        NUM_SLOTS_TYPE_1 = 1
        SLOT_TYPE_1 = cpus=100%
        SLOT_TYPE_1_PARTITIONABLE = True
        SLOT1_1_USER = slot01
        SLOT1_2_USER = slot02
        SLOT1_3_USER = slot03
        SLOT1_4_USER = slot04
        SLOT1_5_USER = slot05
        SLOT1_6_USER = slot06
        SLOT1_7_USER = slot07
        SLOT1_8_USER = slot08
        SLOT1_9_USER = slot09
        SLOT1_10_USER = slot10
        SLOT1_11_USER = slot11
        SLOT1_12_USER = slot12
        SLOT1_13_USER = slot13
        SLOT1_14_USER = slot14
        SLOT1_15_USER = slot15
        SLOT1_16_USER = slot16
        DEDICATED_EXECUTE_ACCOUNT_REGEXP = slot[0-9]+
        STARTER_ALLOW_RUNAS_OWNER = False
        EXECUTE = /var/lib/condor/execute

        ## These varibales tells condor which certificate to
        ## use to GSI authenticate this host.
        ##
        ## Note that the /etc/init.d/condor startup script
        ## also relies on those values being properly
        ## set.
        GSI_DAEMON_DIRECTORY = /etc/grid-security
        GSI_DAEMON_CERT = /etc/grid-security/hostcert.pem
        GSI_DAEMON_KEY = /etc/grid-security/hostkey.pem

        ## Job processing options.
        SUSPEND = False
        CONTINUE = True
        PREEMPT = False
        KILL = False

        ## Evaluate VMType as part of the job requirements.
        STARTD_ATTRS = COLLECTOR_HOST_STRING VMType

        ## Ephemeral port specifications:
        HIGHPORT = 50000
        LOWPORT = 40000
    owner: root:root
    permissions: '0644'
    path: /etc/condor/condor_config.local
ganglia:
 globals:
  override_hostname: "%f"
 cluster:
  name: '"IAAS"'
 udp_recv_channel:
  port: 9004
 tcp_accept_channel:
  port: 9004
 udp_send_channel:
  host: atlas-ganglia-mon.cern.ch
  port: 9004
  ttl: 2


